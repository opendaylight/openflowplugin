{
  "comments": [
    {
      "key": {
        "uuid": "ba1f61a0_7f3705e4",
        "filename": "openflowplugin-api/src/main/java/org/opendaylight/openflowplugin/api/openflow/statistics/StatisticsContext.java",
        "patchSetId": 20
      },
      "lineNbr": 36,
      "author": {
        "id": 65
      },
      "writtenOn": "2017-08-10T09:36:10Z",
      "side": 1,
      "message": "do we really need this API. I assume if reconciliation framework is enabled then plugin will first do the reconciliation and then it will enable the statistics, so once enableStatistics() is done, it will gather the first set of statistics anyways. So wondering why we need explicit API for that.",
      "range": {
        "startLine": 36,
        "startChar": 12,
        "endLine": 36,
        "endChar": 47
      },
      "revId": "72e0c074db589c5963135cd5b87debfdaab7612b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_11ab55d9",
        "filename": "openflowplugin-api/src/main/java/org/opendaylight/openflowplugin/api/openflow/statistics/StatisticsContext.java",
        "patchSetId": 20
      },
      "lineNbr": 36,
      "author": {
        "id": 65
      },
      "writtenOn": "2017-08-12T05:52:27Z",
      "side": 1,
      "message": "I think my point is that, once you start the periodic statistics it will anyways collect the first set of stats immediately , so why do we need to explictly call it rather then using enableGathering itself?",
      "parentUuid": "ba1f61a0_2a60ad31",
      "range": {
        "startLine": 36,
        "startChar": 12,
        "endLine": 36,
        "endChar": 47
      },
      "revId": "72e0c074db589c5963135cd5b87debfdaab7612b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_ff2bf57f",
        "filename": "openflowplugin-api/src/main/java/org/opendaylight/openflowplugin/api/openflow/statistics/StatisticsManager.java",
        "patchSetId": 20
      },
      "lineNbr": 22,
      "author": {
        "id": 65
      },
      "writtenOn": "2017-08-10T09:36:10Z",
      "side": 1,
      "message": "although this API is not part of this patch, but do you have any idea why statistics manager need to talk to reconciliation framework?",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 100
      },
      "revId": "72e0c074db589c5963135cd5b87debfdaab7612b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_71af31e4",
        "filename": "openflowplugin-api/src/main/java/org/opendaylight/openflowplugin/api/openflow/statistics/StatisticsManager.java",
        "patchSetId": 20
      },
      "lineNbr": 22,
      "author": {
        "id": 65
      },
      "writtenOn": "2017-08-12T05:52:27Z",
      "side": 1,
      "message": "yeah, flag is more appropriate here. thanks!",
      "parentUuid": "ba1f61a0_8add5973",
      "range": {
        "startLine": 22,
        "startChar": 4,
        "endLine": 22,
        "endChar": 100
      },
      "revId": "72e0c074db589c5963135cd5b87debfdaab7612b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_bca7cb4e",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/statistics/StatisticsManagerImpl.java",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 65
      },
      "writtenOn": "2017-08-10T09:36:10Z",
      "side": 1,
      "message": "in case user change this value in openflowplugin.cfg file, how does it get set? I think this set is for RPC call, if i am not wrong.",
      "range": {
        "startLine": 73,
        "startChar": 12,
        "endLine": 73,
        "endChar": 37
      },
      "revId": "72e0c074db589c5963135cd5b87debfdaab7612b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_f1820151",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/statistics/StatisticsManagerImpl.java",
        "patchSetId": 20
      },
      "lineNbr": 73,
      "author": {
        "id": 65
      },
      "writtenOn": "2017-08-12T05:52:27Z",
      "side": 1,
      "message": "Okay got it. In this case, we should initialize the isStatisticsFullyDisabled with config value in the constructor itself. And then reset the value in the RPC, if user set it to false.",
      "parentUuid": "ba1f61a0_aa8dbd7d",
      "range": {
        "startLine": 73,
        "startChar": 12,
        "endLine": 73,
        "endChar": 37
      },
      "revId": "72e0c074db589c5963135cd5b87debfdaab7612b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_3cbc7b69",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/statistics/StatisticsManagerImpl.java",
        "patchSetId": 20
      },
      "lineNbr": 92,
      "author": {
        "id": 65
      },
      "writtenOn": "2017-08-10T09:36:10Z",
      "side": 1,
      "message": "please rephrase it to --\u003e Statistics work mode change is already in progress.",
      "range": {
        "startLine": 92,
        "startChar": 60,
        "endLine": 92,
        "endChar": 91
      },
      "revId": "72e0c074db589c5963135cd5b87debfdaab7612b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_7c86f3ba",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/statistics/StatisticsPollingService.java",
        "patchSetId": 20
      },
      "lineNbr": 57,
      "author": {
        "id": 65
      },
      "writtenOn": "2017-08-10T09:36:10Z",
      "side": 1,
      "message": "i think rather then exponentially increasing it, we should set it to averageStatisticsGatheringTime. Because there is still possibility that currentTimerDelay*2 will be less then averageStatisticsGatheringTime.",
      "range": {
        "startLine": 57,
        "startChar": 12,
        "endLine": 57,
        "endChar": 35
      },
      "revId": "72e0c074db589c5963135cd5b87debfdaab7612b",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}