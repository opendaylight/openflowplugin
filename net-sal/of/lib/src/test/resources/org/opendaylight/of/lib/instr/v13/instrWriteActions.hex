# An example Instruction structure
# See section A.2.4 Flow Instruction Structures of the 1.3 Spec.
#
# WRITE_ACTIONS

## HEADER
# Instruction Type (u16) : WRITE_ACTIONS = 3
#<0>#
00 03

# Length of struct (u16) = 56
00 38

## INSTRUCTION SPECIFIC
# Pad to 64-bit boundary (u8 x 4)
00 00 00 00

#### Action List Goes Here ####
### NOTE: WRITE_ACTIONS treats the actions as a set.
##        The implementation uses a TreeSet.
##        Actions are sorted by ActionType, and within
##        SET_FIELDs, by field type (OxmBasicField)

### (First Action in the Set)
# Action Type (u16), Length (u16), Action Specific
# DEC_MPLS_TTL(16),  8,            padding
#<8>#
  00 10              00 08         00 00 00 00

### (Second Action in the Set)
# Action Type (u16), Length (u16), Action Specific
# SET_FIELD(25),     16,           Single OXM TLV
#<16>#
  00 19              00 10
# Class (u16), Field+M (u8),    Payload Length (u8)
# Basic        ETH_DST(3<<1)    6
  8000         06               06
## Payload : Destination MAC address (u48)
#<24>#
00 00 1e 45 34 11
#### Pad field to 64-bits
00 00

### (Third Action in the Set)
# Action Type (u16), Length (u16), Action Specific
# SET_FIELD(25),     24,           Single OXM TLV
#<32>#
  00 19              00 18
# Class (u16), Field+M (u8),    Payload Length (u8)
# Basic        IPV6_DST(27<<1)  16
  8000         36               10
## Payload : Destination IPv6 address (u128) = fedc::8765:4321
#<40>#
fedc 0000 0000 0000 0000 0000 8765 4321
#### Pad field to 64-bits (none required)

#<56>#
### END ###
