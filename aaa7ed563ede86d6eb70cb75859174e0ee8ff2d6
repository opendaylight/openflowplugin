{
  "comments": [
    {
      "key": {
        "uuid": "9a561d44_4285b6ab",
        "filename": "model/model-flow-base/src/main/yang/opendaylight-ipv6-arbitrary-bitmask-fields.yang",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-07-20T21:51:29Z",
      "side": 1,
      "message": "please break this in multiple like \u003c120 char",
      "range": {
        "startLine": 15,
        "startChar": 16,
        "endLine": 15,
        "endChar": 21
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_6c9b8c72",
        "filename": "model/model-flow-base/src/main/yang/opendaylight-ipv6-arbitrary-bitmask-fields.yang",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1602
      },
      "writtenOn": "2016-07-21T07:33:08Z",
      "side": 1,
      "message": "thanks for the comment. I did try with line breaks. If there are any line breaks in yang pattern, when pattern is converted in to java generated code, generated java code will have \"\\n\" for all the line breaks. This is not desired as it will break the expected java pattern. We may need to take an exception here.",
      "parentUuid": "9a561d44_4285b6ab",
      "range": {
        "startLine": 15,
        "startChar": 16,
        "endLine": 15,
        "endChar": 21
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_506a8db3",
        "filename": "model/model-flow-base/src/main/yang/opendaylight-ipv6-arbitrary-bitmask-fields.yang",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-07-24T04:10:27Z",
      "side": 1,
      "message": "Most of the yang files do break these patter in multiple line .. here is an example \n\ntypedef ipv6-address {\n     type string {\n       pattern \u0027((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}\u0027\n             + \u0027((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|\u0027\n             + \u0027(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}\u0027\n             + \u0027(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))\u0027\n             + \u0027(%[\\p{N}\\p{L}]+)?\u0027;\n       pattern \u0027(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|\u0027\n             + \u0027((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)\u0027\n             + \u0027(%.+)?\u0027;\n     }a\n\nfrom \nhttps://tools.ietf.org/html/rfc6021",
      "parentUuid": "9a561d44_6c9b8c72",
      "range": {
        "startLine": 15,
        "startChar": 16,
        "endLine": 15,
        "endChar": 21
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_02bbbe72",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-07-20T21:51:29Z",
      "side": 1,
      "message": "please use consistent terms, change it to bitmask",
      "range": {
        "startLine": 146,
        "startChar": 77,
        "endLine": 146,
        "endChar": 81
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_cc89f827",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1602
      },
      "writtenOn": "2016-07-21T07:33:08Z",
      "side": 1,
      "message": "Thanks. Done.",
      "parentUuid": "9a561d44_02bbbe72",
      "range": {
        "startLine": 146,
        "startChar": 77,
        "endLine": 146,
        "endChar": 81
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_d6d4e721",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 660,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-07-20T21:51:29Z",
      "side": 1,
      "message": "i would suggest to use BitSet here rather then string operation, because string operation and it\u0027s conversion is costly operation. Somthing link\n\nBitSet ipmask \u003d new BitSet(128);\n        ipmask.set(0,maskLength,true);\n        ipmask.set(maskLength+1,128,false);\n        byte[] finalmask \u003d new byte[16];\n        System.arraycopy(ipmask.toByteArray(),0,finalmask,0,ipmask.toByteArray().length);",
      "range": {
        "startLine": 652,
        "startChar": 8,
        "endLine": 660,
        "endChar": 71
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_ac8c8436",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 660,
      "author": {
        "id": 1602
      },
      "writtenOn": "2016-07-21T07:33:08Z",
      "side": 1,
      "message": "Thanks. This is valuable suggestion. Done.",
      "parentUuid": "9a561d44_d6d4e721",
      "range": {
        "startLine": 652,
        "startChar": 8,
        "endLine": 660,
        "endChar": 71
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_f6e12bff",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 742,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-07-20T21:51:29Z",
      "side": 1,
      "message": "this condition does not make sense because you are already accessing mask in previous condition, so if mask is null, it will anyways fail at the first condition.",
      "range": {
        "startLine": 742,
        "startChar": 39,
        "endLine": 742,
        "endChar": 51
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_0c84900a",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 742,
      "author": {
        "id": 1602
      },
      "writtenOn": "2016-07-21T07:33:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_f6e12bff",
      "range": {
        "startLine": 742,
        "startChar": 39,
        "endLine": 742,
        "endChar": 51
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_36e3a306",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 752,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-07-20T21:51:29Z",
      "side": 1,
      "message": "please rephrase it to \"Failed to convert mask string to ipv6 format mask.",
      "range": {
        "startLine": 751,
        "startChar": 12,
        "endLine": 752,
        "endChar": 86
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_4c7de81b",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 752,
      "author": {
        "id": 1602
      },
      "writtenOn": "2016-07-21T07:33:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a561d44_36e3a306",
      "range": {
        "startLine": 751,
        "startChar": 12,
        "endLine": 752,
        "endChar": 86
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_3678c32a",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 784,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-07-20T21:51:29Z",
      "side": 1,
      "message": "please use bitset to check the arbitrary bit mask.",
      "range": {
        "startLine": 774,
        "startChar": 1,
        "endLine": 784,
        "endChar": 9
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_4ca4c8a5",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 784,
      "author": {
        "id": 1602
      },
      "writtenOn": "2016-07-21T07:33:08Z",
      "side": 1,
      "message": "Inorder to use Bitset here, we need to find the masklength, for which we need to iterate the arrayList any way atleast once. Bitset functionality here would be overhead since if used, we need to iterate the arraylist atleast twice.",
      "parentUuid": "9a561d44_3678c32a",
      "range": {
        "startLine": 774,
        "startChar": 1,
        "endLine": 784,
        "endChar": 9
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a561d44_306719eb",
        "filename": "openflowplugin/src/main/java/org/opendaylight/openflowplugin/openflow/md/core/sal/convertor/IpConversionUtil.java",
        "patchSetId": 3
      },
      "lineNbr": 784,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-07-24T04:10:27Z",
      "side": 1,
      "message": "okay make sense",
      "parentUuid": "9a561d44_4ca4c8a5",
      "range": {
        "startLine": 774,
        "startChar": 1,
        "endLine": 784,
        "endChar": 9
      },
      "revId": "aaa7ed563ede86d6eb70cb75859174e0ee8ff2d6",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}