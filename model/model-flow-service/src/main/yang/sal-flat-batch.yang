module sal-flat-batch {
    namespace "urn:opendaylight:flat-batch:service";
    prefix fbatch;

    import yang-ext {prefix ext; revision-date "2013-07-09";}
    import opendaylight-inventory {prefix inv;revision-date "2013-08-19";}
    import barrier-common {prefix bc;revision-date "2016-03-15";}
    import batch-common {prefix batch;revision-date "2016-03-22";}
    import sal-flows-batch {prefix f-batch;revision-date "2016-03-14";}
    import flow-node-inventory {prefix flow-inv; revision-date "2013-08-19";}
    import sal-groups-batch {prefix g-batch;revision-date "2016-03-15";}
    import opendaylight-group-types {prefix group-type;revision-date "2013-10-18";}
    import sal-meters-batch {prefix m-batch;revision-date "2016-03-16";}
    import opendaylight-meter-types {prefix meter-type;revision-date "2013-09-18";}

    description "Openflow batch flow management.";

    revision "2016-03-21" {
        description "Initial revision of batch flat service.";
    }


    rpc process-flat-batch {
        description "Process add/update/remove of items in batch towards openflow device.";
        input {
            uses "inv:node-context-ref";

            list batch {
                key batch-order;

                leaf batch-order {
                    type uint16;
                }
                choice batch-choice {
                    // filled via augmentations
                }
            }
            uses bc:barrier-suffix;
            leaf exit-on-first-error {
                description "If true then batch will execute all steps and report list of occurred errors,
                    otherwise there will be only first error reported and execution will be stop right there.";
                type boolean;
            }
        }
        output {
            list batch-failure {
                key batch-order;

                uses batch:batch-order-grouping;
                choice batch-item-id-choice {
                    // filled via augmentations
                }
            }
        }
    }

    augment "/process-flat-batch/input/batch/batch-choice" {
        ext:augment-identifier "flat-batch-flow-crud-case-aug";
        description "Openflow add/remove/update flow operation.";

        case flat-batch-add-flow-case {
            container flat-batch-add-flow-container {
                uses f-batch:batch-flow-input-grouping;
            }
        }
        case flat-batch-remove-flow-case {
            container flat-batch-remove-flow-container {
                uses f-batch:batch-flow-input-grouping;
            }
        }
        case flat-batch-update-flow-case {
            container flat-batch-update-flow-container {
                uses f-batch:batch-flow-input-update-grouping;
            }
        }
    }

    augment "/process-flat-batch/input/batch/batch-choice" {
        ext:augment-identifier "flat-batch-group-crud-case-aug";
        description "Openflow add/remove/update group operation.";

        case flat-batch-add-group-case {
            container flat-batch-add-group-container {
                uses group-type:group;
            }
        }
        case flat-batch-remove-group-case {
            container flat-batch-remove-group-container {
                uses group-type:group;
            }
        }
        case flat-batch-update-group-case {
            container flat-batch-update-group-container {
                uses g-batch:batch-group-input-update-grouping;
            }
        }
    }

    augment "/process-flat-batch/input/batch/batch-choice" {
        ext:augment-identifier "flat-batch-meter-crud-case-aug";
        description "Openflow add/remove/update meter operation.";

        case flat-batch-add-meter-case {
            container flat-batch-add-meter-container {
                uses meter-type:meter;
            }
        }
        case flat-batch-remove-meter-case {
            container flat-batch-remove-meter-container {
                uses meter-type:meter;
            }
        }
        case flat-batch-update-meter-case {
            container flat-batch-update-meter-container {
                uses m-batch:batch-meter-input-update-grouping;
            }
        }
    }

    augment "/process-flat-batch/output/batch-failure/batch-item-id-choice" {
        ext:augment-identifier "flat-batch-failure-ids-aug";
        description "Openflow flat batch failures - corresponding item id.";

        case flat-batch-failure-flow-id-case {
            description "case for flow-id";
            leaf flow-id {
                type flow-inv:flow-id;
            }
        }
        case flat-batch-failure-group-id-case {
            description "case for group-id";
            leaf group-id {
                type group-type:group-id;
            }
        }
        case flat-batch-failure-meter-id-case {
            description "case for meter-id";
            leaf meter-id {
                type meter-type:meter-id;
            }
        }
    }
}
