{
  "comments": [
    {
      "key": {
        "uuid": "aa6c45b2_5600c8fb",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/OpenFlowPluginProviderImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 5089
      },
      "writtenOn": "2018-11-29T21:41:21Z",
      "side": 1,
      "message": "I only see this called in the close() method further down the file, which also does:\nopenflowPluginStatusMonitor.reportStatus(ServiceState.UNREGISTERED);\n\nDoesn\u0027t that mean the service will not be registered anymore and negate any service state you are putting in with this change?\n\nAlso are you sure that this would be fired off in the case where the TCP Channel was closed due to an error and not a requested shutdown? I see in SwitchConnectionProvider-\u003eshutdown docs:\n* @return future, triggered to true, when all listening channels are down\n\nSo I\u0027m guessing it does, but want to make sure.",
      "range": {
        "startLine": 194,
        "startChar": 44,
        "endLine": 194,
        "endChar": 71
      },
      "revId": "7faa3c137a58b56c0f0a2417baf5ad8de4a69bc1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a33b1115_1357b4b0",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/OpenFlowPluginProviderImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-12-03T11:27:05Z",
      "side": 1,
      "message": "\u003e I only see this called in the close() method further down the file, which also does: openflowPluginStatusMonitor.reportStatus(ServiceState.UNREGISTERED); Doesn\u0027t that mean the service will not be registered anymore and negate any service state you are putting in with this change?\n\nYou had me doubt myself for a second there, but it\u0027s not how diagstatus works: reportStatus(ServiceState.UNREGISTERED) sets the status of a known registered service to be UNREGISTERED (shut down) - which is what we want.  Actually unregistering a service competely so that it does not report anymore would be via unregister() on the ServiceRegistration which the register() returned, but in OpenflowPluginDiagStatusProvider that never happens (which is OK; unless we wanted to support dynamic bundle unregistration, but forget about that).  -- BTW: And I do agree that the ... wording of ServiceState.UNREGISTERED is unfortunate.  Faseela, do you have any motivation to still change this?\n\n\u003e Also are you sure that this would be fired off in the case where the TCP Channel was closed due to an error and not a requested shutdown? I see in SwitchConnectionProvider-shutdown docs: @return future, triggered to true, when all listening channels are down So I\u0027m guessing it does, but want to make sure.\n\nNot 100% sure about this; it\u0027s a bit nebulous to me under what exact circumstances the TCP Channel could possibly get closed due to an error and not a requested shutdown.. perhaps one of the OFP committers could shine some more light on this?  If there are additional scenarios where whatever is started to listen on those ports (TcpHandler ?) closes, or dies, then those places should simply also use report ERROR via openflowPluginStatusMonitor.",
      "parentUuid": "aa6c45b2_5600c8fb",
      "range": {
        "startLine": 194,
        "startChar": 44,
        "endLine": 194,
        "endChar": 71
      },
      "revId": "7faa3c137a58b56c0f0a2417baf5ad8de4a69bc1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01c4962d_39c61788",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/OpenFlowPluginProviderImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 5089
      },
      "writtenOn": "2018-12-03T14:36:09Z",
      "side": 1,
      "message": "OK I think I understand, but even if that is the case and UNREGISTERED really means shutdown, isn\u0027t this change still not doing anything because you report ERROR, then the calling method reports UNREGISTERED?",
      "parentUuid": "a33b1115_1357b4b0",
      "range": {
        "startLine": 194,
        "startChar": 44,
        "endLine": 194,
        "endChar": 71
      },
      "revId": "7faa3c137a58b56c0f0a2417baf5ad8de4a69bc1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ca36711_16ee9edf",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/OpenFlowPluginProviderImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-12-03T18:56:22Z",
      "side": 1,
      "message": "Yes, you are totally right about \"report ERROR, then the calling method reports UNREGISTERED\", so let me remove this.  The REALLY correct thing to do, in theory, would be to set the status based on this returned future, if we were particularly concerned to distinuish a error from an unregistered diag state during shutdown, but I don\u0027t think we are; forget that.\n\nThe big real question is if there are any scenarios where the diag status should be error during run-time (not shutodwn), because the TCP Channel got closed, and where in the code that could happen; input on that would be very welcome.",
      "parentUuid": "01c4962d_39c61788",
      "range": {
        "startLine": 194,
        "startChar": 44,
        "endLine": 194,
        "endChar": 71
      },
      "revId": "7faa3c137a58b56c0f0a2417baf5ad8de4a69bc1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ab322a4_ac1b3edc",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/OpenFlowPluginProviderImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 5089
      },
      "writtenOn": "2018-12-06T19:12:09Z",
      "side": 1,
      "message": "Looks like the TcpHandler class is using io.netty.channel in the backend of the facade. I wonder if you could locally test this scenario by causing a ChannelException to be thrown after some time, and see if the diagstatus changes correctly.\n\nAlternatively, you could also modify the code and add a channelFuture to listen for when the channel is closed and then update diagstatus, maybe by updating the serverFacade.getIsOnlineFuture\n\nhttps://netty.io/4.0/api/io/netty/channel/Channel.html#closeFuture--",
      "parentUuid": "1ca36711_16ee9edf",
      "range": {
        "startLine": 194,
        "startChar": 44,
        "endLine": 194,
        "endChar": 71
      },
      "revId": "7faa3c137a58b56c0f0a2417baf5ad8de4a69bc1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e936ad07_039a273a",
        "filename": "openflowplugin-impl/src/main/java/org/opendaylight/openflowplugin/impl/OpenFlowPluginProviderImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 5867
      },
      "writtenOn": "2018-12-12T11:47:45Z",
      "side": 1,
      "message": "Given that this looks good to Arun as is and he\u0027s only had another minor feedback and seems to willing to merge this, I\u0027ve opted to address this in separate changes, let\u0027s take this forward in https://git.opendaylight.org/gerrit/#/c/78677/ (which requires trivial https://git.opendaylight.org/gerrit/#/c/78675/)",
      "parentUuid": "4ab322a4_ac1b3edc",
      "range": {
        "startLine": 194,
        "startChar": 44,
        "endLine": 194,
        "endChar": 71
      },
      "revId": "7faa3c137a58b56c0f0a2417baf5ad8de4a69bc1",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}