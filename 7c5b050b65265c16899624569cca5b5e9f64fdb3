{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_b16d6707",
        "filename": "openflowplugin-api/src/main/yang/openflow-provider-config.yang",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-08-03T03:49:19Z",
      "side": 1,
      "message": "You don\u0027t need to define it here as CSS is no longer used.",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_074b362c",
        "filename": "openflowplugin-api/src/main/yang/openflow-provider-config.yang",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 5478
      },
      "writtenOn": "2016-08-03T16:55:02Z",
      "side": 1,
      "message": "I think this yang file is the right one. Older yang for CSS is in openflowplugin-impl/src/main/yang/openflow-plugin-impl.yang",
      "parentUuid": "7a6b29fe_b16d6707",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_8a058dc4",
        "filename": "openflowplugin-api/src/main/yang/openflow-provider-config.yang",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-08-03T18:03:31Z",
      "side": 1,
      "message": "Sorry I thought this was CSS yang.",
      "parentUuid": "7a6b29fe_074b362c",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_f176bfd7",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-08-03T03:49:19Z",
      "side": 1,
      "message": "Just want to point out that the downside to using a cfg file is that the setting isn\u0027t clustered, i.e. a user would have to set it on every node.",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_875e26e8",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 5478
      },
      "writtenOn": "2016-08-03T16:55:02Z",
      "side": 1,
      "message": "Probably better would be using this approach -\u003e https://wiki.opendaylight.org/view/Using_Blueprint#Using_the_Datastore",
      "parentUuid": "7a6b29fe_f176bfd7",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_8a2c6d4c",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-08-03T18:03:31Z",
      "side": 1,
      "message": "yes but I\u0027m confused. You have an openflow-provider-config yang that I assume is used for clustered-app-config. If so, why do you need a cfg file as well with the same setting? It seems you\u0027re defining the same setting in 2 different ways. Are both injected into code and, if so, which one wins?",
      "parentUuid": "7a6b29fe_875e26e8",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_d36e2096",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-08-04T06:11:50Z",
      "side": 1,
      "message": "The CSS xml files are still there but deprecated with the conversion to blueprint. They remain for backwards compatibility. But I\u0027m not referring to that. In openflowplugin.xml, it uses the clustered-app-config extension to retrieve the openflow-provider-config yang instance and injects it into the openflowPluginProvider. It also uses the cm:managed-properties to inject cfg properties. This was added sometime after I had converted it to blueprint. My question is why was the cfg added, especially since the properties are also in the openflow-provider-config yang. Now there\u0027s 2 ways for a user to change the properties and they can stomp on one another. The cfg file should be removed.",
      "parentUuid": "7a6b29fe_ea224100",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_f31fdc07",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 5478
      },
      "writtenOn": "2016-08-04T06:31:05Z",
      "side": 1,
      "message": "I think the cfg file was added there to enable users changing the default value without re-building karaf. \n\nBut as I see now, probably the best way is to use clustered DS approach (from the link) along with \"external XML file\" with initial default values (instead of actual cfg file with update method, similar to deprecated xml for CSS). \n\nSo it would be possible for users to change config values before starting karaf and also in runtime.\n\nIs this correct understanding, Tom?",
      "parentUuid": "7a6b29fe_d36e2096",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_f36cfc38",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-08-04T08:08:56Z",
      "side": 1,
      "message": "yes - I have recently added support in clustered-app-config to read the initial/default values from an external XML file on startup. To change it at runtime, you write to the data store, although after that the external XML file is no longer used. This is similar to CSS in that if you push a change via the restconf controller loopback mount, the config moves to the current.xml and etc/opendaylight/karaf is no longer used.",
      "parentUuid": "7a6b29fe_f31fdc07",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_be09ab2e",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 5280
      },
      "writtenOn": "2016-08-04T09:04:53Z",
      "side": 1,
      "message": "Totally agree with Shuva, lets make another commit/patch to make ALL configurable parameters into xml",
      "parentUuid": "7a6b29fe_93bb0872",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_1ebb7f0f",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 5478
      },
      "writtenOn": "2016-08-04T10:19:04Z",
      "side": 1,
      "message": "It will not prevent runtime config modifications Shuva - as Tom mentioned, it should be possible to change config params via writing to DS then. But it would ignore initial xml file after such change in DS - that\u0027s pity, however I think this is trade-off (assuming cluster environment and runtime configuration change) between one change in distributed DS and changing xml files on all running karaf instances.\n\nSo +1 from me - let\u0027s replace cfg file and related update method with one external xml file which could be injected in blueprint openflowplugin.xml and deployed via features pom to etc/opendaylight/...",
      "parentUuid": "7a6b29fe_be09ab2e",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_6bc8f074",
        "filename": "openflowplugin-blueprint-config/src/main/resources/initial/openflowplugin.cfg",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1842
      },
      "writtenOn": "2016-08-04T15:07:52Z",
      "side": 1,
      "message": "yes. But the fact that it ignores the initial xml file after changing in DS is no different to how the CSS works. In CSS, the XML file in etc/opendaylight/karaf is the initial module config, same as the external XML file for clustered-app-config. In CSS, if you push a change via restconf, the initial files in etc/opendaylight/karaf are moved to the current.xml which is used from then on. Again this behavior is the same as with clustered-app-config when written to the DS.",
      "parentUuid": "7a6b29fe_1ebb7f0f",
      "revId": "7c5b050b65265c16899624569cca5b5e9f64fdb3",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}