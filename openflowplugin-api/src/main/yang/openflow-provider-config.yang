module openflow-provider-config {
    yang-version 1;
    namespace "urn:opendaylight:params:xml:ns:yang:openflow:provider:config";
    prefix "openflow-provider-config";

    description
        "Configuration for an Openflow provider.";

    revision "2016-05-10" {
        description
            "Initial revision";
    }

    typedef context-chain-state {
        description "Context chain state";
        type enumeration {
            enum SLEEPING {
                description "Context chain is sleeping without a connection.";
            }
            enum WORKING_MASTER {
                description "Context chain is working as MASTER.";
            }
            enum WORKING_SLAVE {
                description "Context chain is working as SLAVE, initial gathering already done.";
            }
            enum INITIALIZED {
                description "Context chain is created is working as SLAVE initial gathering need to be done.";
            }
        }
    }


    typedef non-zero-uint32-type {
        type uint32 {
            range "1..max";
        }
    }

    typedef non-zero-uint16-type {
        type uint16 {
            range "1..max";
        }
    }

    container openflow-provider-config {
        leaf rpc-requests-quota {
            type uint32;
            default 20000;
        }

        leaf switch-features-mandatory {
            type boolean;
            default false;
        }

        leaf global-notification-quota {
            type uint32;
            default 64000;
        }

        leaf is-statistics-polling-on {
            type boolean;
            default "true";
        }

        leaf is-statistics-rpc-enabled {
            description "Deprecated - exposing backward compatible statistics rpcs providing result in form of async notification";
            type boolean;
            default "false";
        }

        leaf barrier-interval-timeout-limit {
            type non-zero-uint32-type;
            default 500;
        }

        leaf barrier-count-limit {
            type non-zero-uint16-type;
            default 25600;
        }

        leaf echo-reply-timeout {
            type non-zero-uint32-type;
            default 2000;
        }

        leaf thread-pool-min-threads {
            description "Mininum (starting) number of threads in thread pool";
            type uint16;
            default 1;
        }

        leaf thread-pool-max-threads {
            description "Maximum number of threads in thread pool";
            type non-zero-uint16-type;
            default 32000;
        }

        leaf thread-pool-timeout {
            description "After how much time (in seconds) of inactivity will be threads in pool terminated";
            type uint32;
            default 60;
        }

        leaf enable-flow-removed-notification {
            description "Turning on flow removed notification";
            type boolean;
            default "true";
        }

        leaf skip-table-features {
            description "Ability to skip pulling and storing of large table features. These features are still
            available via rpc but if set to true then maintenance in DS will be omitted";
            type boolean;
            default "true";
        }

        leaf basic-timer-delay {
            description "initial delay used in polling the statistics, value is in milliseconds";
            type non-zero-uint32-type;
            default 3000;
        }

        leaf maximum-timer-delay {
            description "maximum timer delay is the wait time to collect next statistics
            used in polling the statistics, value is in milliseconds";
            type non-zero-uint32-type;
            default 900000;
        }

        leaf use-single-layer-serialization {
            description "When true, Yang models are serialized and deserialized directly to and from format supported
            by device, so serialization and deserialization is faster. Otherwise, models are first serialized to
            Openflow specification models and then to format supported by device, and reversed when deserializing.";
            type boolean;
            default "true";
        }
        container context-chain-config {

            leaf ttl-before-drop {
                description "TTL in miliseconds without connection before the context chain shall be dropped";
                type uint32;
                default 5000;
            }

            leaf never-drop-contexts-on {
                description "if true then context chain will not be droped, otherwise use ttl-before-drop";
                type boolean;
                default true;
            }

            leaf context-chain-startup-state {
                description "this will set the default state of context chain after creation";
                type context-chain-state;
                default WORKING_SLAVE;
            }

            leaf number-of-needed-managers {
                description "chceck number for needed managers";
                type uint16;
                default 3;
            }

        }

    }
}
